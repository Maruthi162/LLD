=> Constructor Design Pattern:

    The Constructor Design Pattern is not an official design pattern from the Gang of Four (GoF), but it refers to a common approach for creating and initializing objects using constructors. It is often compared to the Builder Pattern because both deal with object creation, but the Constructor Pattern relies solely on constructors for initialization.

=>Key Features of the Constructor Design Pattern
    
    1)Object Creation via Constructors:

    `       The pattern uses constructors to initialize objects with required and optional parameters.

    2) Compact Initialization:

            All required and optional parameters are passed directly to the constructor during object creation.
    3)Immutable Objects:

        Objects created using this pattern are often immutable because all properties are set during construction and cannot be changed later.
    4)Overloaded Constructors:

        Multiple constructors are often provided to handle different combinations of required and optional parameters.


=> Advantages of the Constructor Design Pattern

    1)Simplicity:
        The pattern is straightforward and easy to implement.

    2)Compact Code:
        Object creation and initialization are done in a single step.

    3)Immutable Objects:
        Ensures immutability if no setters are provided, making the object thread-safe.

    4)No Additional Classes:
        Unlike the Builder Pattern, no additional builder class is required.


=> Disadvantages of the Constructor Design Pattern
    
    1)Constructor Overloading:
        When there are many parameters, multiple overloaded constructors are required, which can make the code harder to read and maintain.

    2)Hard to Read:
        Passing many parameters to a constructor can make the code less readable, especially if the parameter order is not intuitive.

    3)Scalability Issues:
        Adding new optional parameters requires creating additional constructors, leading to a combinatorial explosion of constructor overloads.

    4)No Flexibility:
        All parameters must be provided at once, even if some are optional.